name: coverity-scan

on:
  push:
    branches:
      - coverity_scan

jobs:
  Coverity:
    runs-on: ubuntu-latest
    env:
      SDK_URL: ${{ secrets.SDK_URL }}
      coverity_token: ${{ secrets.coverity_token }}

    steps:
    - name: Cache Coverity build tool
      id: cache-coverity-tool
      uses: actions/cache@v1
      with:
        path: '/tmp/cov-analysis'
        key: cache-coverity-tool
    - name: Download Coverity build tool
      if: steps.cache-coverity-tool.outputs.cache-hit != 'true'
      run: |
        cd /tmp
        wget --no-verbose https://scan.coverity.com/download/linux64 --post-data "token=$coverity_token&project=UltraGrid" -O coverity_tool.tgz
        tar xaf coverity_tool.tgz
        mv /tmp/cov-analysis* /tmp/cov-analysis
    - uses: actions/checkout@v1
      with:
        submodules: true
    - name: bootstrap
      run: .github/scripts/Linux/prepare.sh
    - name: configure
      run: ./autogen.sh --enable-qt --with-cuda-host-compiler=gcc-6 --enable-plugins --with-live555=/usr/local
    - name: Build with cov-build
      run: |
        /tmp/cov-analysis/bin/cov-build --dir cov-int make -j4
    - name: Submit the result to Coverity Scan
      run: |
        tar caf ultragrid.tar.xz cov-int
        curl -S --form token=$coverity_token \
          --form email=pulec@cesnet.cz \
          --form file=@ultragrid.tar.xz \
          --form version="$(date +%F)" \
          --form description="master build" \
          https://scan.coverity.com/builds?project=UltraGrid

# vi: set expandtab sw=2:
